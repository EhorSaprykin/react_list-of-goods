{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","localeCompare","length","reverse","console","log","App","state","NONE","sortByAlphabet","setState","ALPHABET","sortByLength","LENGTH","reset","isAlphabet","this","isLength","hideReset","className","type","onClick","map","good","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAyBzB,OAvBAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,IAAK,OASL,QACE,OAAO,EAPT,IAAK,WACH,OAAQI,EAAEE,cAAcD,GAE1B,IAAK,SACH,OAAQD,EAAEG,OAASF,EAAEE,WAOvBN,GACFC,EAAaM,UAIfC,QAAQC,IAAIV,EAAUC,GAEfC,G,SAxCJN,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KAgDE,IAAMe,EAAb,4MACEC,MAAyB,CACvBX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEf,SAAUJ,EAASoB,YAPvC,EAUEC,aAAe,WACb,EAAKF,SAAS,CAAEf,SAAUJ,EAASsB,UAXvC,EAcEV,QAAU,WACR,EAAKO,UAAS,SAACH,GAAD,MAAY,CACxBX,YAAaW,EAAMX,gBAhBzB,EAoBEkB,MAAQ,WACN,EAAKJ,UAAS,iBAAO,CACnBd,YAAY,EACZD,SAAUJ,EAASiB,UAvBzB,4CA2BE,WACE,IAAMO,EAAaC,KAAKT,MAAMZ,WAAaJ,EAASoB,SAC9CM,EAAWD,KAAKT,MAAMZ,WAAaJ,EAASsB,OAC5CK,EAAoC,SAAxBF,KAAKT,MAAMZ,WAAwBqB,KAAKT,MAAMX,WAEhE,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWJ,EACP,0BACA,iBACJM,QAASL,KAAKP,eALhB,iCAUA,wBACEW,KAAK,SACLD,UAAWF,EACP,6BACA,oBACJI,QAASL,KAAKJ,aALhB,4BAUA,wBACEQ,KAAK,SACLD,UAAWH,KAAKT,MAAMX,WAClB,oBACA,6BACJyB,QAASL,KAAKb,QALhB,qBAUCe,EACG,GAEA,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAASL,KAAKF,MAHhB,sBAUN,6BACGrB,EAAkBD,EAAiBwB,KAAKT,OAAOe,KAAI,SAACC,GACnD,OAAO,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,eAhF3C,GAAyBC,IAAMC,eC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.47324f73.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'none',\n  ALPHABET = 'alphabet',\n  LENGTH = 'length',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case 'none':\n        return 0;\n\n      case 'alphabet':\n        return (a.localeCompare(b));\n\n      case 'length':\n        return (a.length - b.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState(() => ({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const isAlphabet = this.state.sortType !== SortType.ALPHABET;\n    const isLength = this.state.sortType !== SortType.LENGTH;\n    const hideReset = this.state.sortType === 'none' && !this.state.isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={isAlphabet\n              ? 'button is-info is-light'\n              : 'button is-info'}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={isLength\n              ? 'button is-success is-light'\n              : 'button is-success'}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={this.state.isReversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {hideReset\n            ? ''\n            : (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map((good) => {\n            return <li data-cy=\"Good\" key={good}>{good}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}